{
	"id": "90666444-559a-46b3-84be-b4a15d998502",
	"name": "diploma",
	"timestamp": "2025-09-17T16:12:01.496Z",
	"collection_id": "40916386-54fe78f5-8a0e-4bbb-af1c-5da8babf9e84",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 135,
	"delay": "10",
	"persist": true,
	"status": "finished",
	"startedAt": "2025-09-17T16:11:52.845Z",
	"totalFail": 63,
	"results": [
		{
			"id": "669757ee-f999-41f5-b328-52aa4317e05a",
			"name": "create_first_user",
			"url": "http://localhost/api/users/",
			"time": 297,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				297
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "1664c53c-3066-4a08-91b2-5e12a563831f",
			"name": "create_second_user",
			"url": "http://localhost/api/users/",
			"time": 235,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				235
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b9c660fa-d587-490d-903f-56106edfaa88",
			"name": "create_third_user",
			"url": "http://localhost/api/users/",
			"time": 234,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				234
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "7223704c-cace-4c02-b885-a55207ae504a",
			"name": "get_token_for_first_user",
			"url": "http://localhost/api/auth/token/login/",
			"time": 279,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				279
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "3f2a6017-8c6b-42e6-a1f9-64e0b9e0c656",
			"name": "get_token_for_second_user",
			"url": "http://localhost/api/auth/token/login/",
			"time": 238,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				238
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "d0f80aae-1741-4b82-9be1-c29b1b655d6d",
			"name": "user_registration_without_email",
			"url": "http://localhost/api/users/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d217bf48-3133-41a1-9f60-338af35391ea",
			"name": "user_registration_without_username",
			"url": "http://localhost/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f828e836-dd58-4232-a3bd-31ecb205bcb7",
			"name": "user_registration_without_first_name",
			"url": "http://localhost/api/users/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5efb7646-9906-4104-93a0-b5b6e2834c98",
			"name": "user_registration_without_last_name",
			"url": "http://localhost/api/users/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c5eb83a6-bf98-4c8e-b7c9-e88c420333a9",
			"name": "user_registration_without_password",
			"url": "http://localhost/api/users/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "53b1e31b-fad1-496b-88cf-f6564e84d8b1",
			"name": "user_registration_too_long_email",
			"url": "http://localhost/api/users/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "83d443d6-ae42-4200-9c36-6072b29e2356",
			"name": "user_registration_too_long_username",
			"url": "http://localhost/api/users/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "67cacff5-99e0-4a74-9c80-4c622cf814c9",
			"name": "user_registration_too_long_first_name",
			"url": "http://localhost/api/users/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "54ce8985-8288-4c46-b719-ba7004374052",
			"name": "user_registration_too_long_last_name",
			"url": "http://localhost/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c1e4b09d-9ad4-4c23-b7f5-6db81cad0d3c",
			"name": "user_registration_with_invalid_username",
			"url": "http://localhost/api/users/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "04403aef-bbc4-455f-833c-8d4a8db29fb8",
			"name": "user_registration_email_in_use",
			"url": "http://localhost/api/users/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bc328a9c-04e1-45f8-9026-f9095e501578",
			"name": "user_registration_username_in_use",
			"url": "http://localhost/api/users/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "68b5ee5a-445b-4c73-aa42-0b5e7ea0d53c",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://localhost/api/auth/token/login/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8cd75ac0-2bbf-4d77-861f-f61ff410b319",
			"name": "get_token_no_email",
			"url": "http://localhost/api/auth/token/login/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e557919f-ac79-471d-8835-a0b3bd604f2f",
			"name": "get_token_no_password",
			"url": "http://localhost/api/auth/token/login/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "763fca67-c3a2-4936-9268-bd4d04b88f91",
			"name": "logout // User",
			"url": "http://localhost/api/auth/token/logout/",
			"time": 9,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "87c51f22-9ef7-4b0e-8980-069efe0eaeee",
			"name": "get_token",
			"url": "http://localhost/api/auth/token/login/",
			"time": 234,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				234
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "f3f28667-84c0-4e45-ba9d-674782e38be5",
			"name": "get_user_list // No Auth",
			"url": "http://localhost/api/users/",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "c708c747-feac-410b-9082-3375d3756359",
			"name": "get_user_list// User",
			"url": "http://localhost/api/users/",
			"time": 26,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "93677307-19c9-44e9-83b3-45547088a519",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://localhost/api/users/?limit=1",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "0f1f8c88-244c-4cd1-a39c-f29b20f40fc8",
			"name": "get_profile // No Auth",
			"url": "http://localhost/api/users/39/",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "7a7b1617-3063-4215-ad86-d3f172b03cac",
			"name": "get_profile // User",
			"url": "http://localhost/api/users/39/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "0f9baa29-cfab-4d12-87d1-8b11210ffd74",
			"name": "users_me // User",
			"url": "http://localhost/api/users/me/",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": true
				}
			]
		},
		{
			"id": "dd659d23-29d4-4401-9d34-fe5ea96c498f",
			"name": "set_avatar // User",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "d881681f-faf8-4987-b575-6a0aacd62e1f",
			"name": "check_avatar_is_set // User",
			"url": "http://localhost/api/users/me/",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно содержать ссылку на аватар": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно содержать ссылку на аватар": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно содержать ссылку на аватар": true
				}
			]
		},
		{
			"id": "86d56e2f-c1ee-4ffa-b414-a617690de81a",
			"name": "reset_password // User",
			"url": "http://localhost/api/users/set_password/",
			"time": 450,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				450
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "7e078313-2fed-4e5e-b2c1-9c0552fdbdc6",
			"name": "get_token_with_new_password",
			"url": "http://localhost/api/auth/token/login/",
			"time": 231,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				231
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "a7bd46f6-53f9-4c6c-badb-5b3086c8ce20",
			"name": "roll_back_password // User",
			"url": "http://localhost/api/users/set_password/",
			"time": 449,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				449
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "91f1e1a7-4ab4-4c27-84a3-e9ec5399d7bc",
			"name": "get_token_for_first_user",
			"url": "http://localhost/api/auth/token/login/",
			"time": 226,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				226
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "8c3b7681-e4ca-4999-af9f-959669575ef6",
			"name": "users_me // No Auth",
			"url": "http://localhost/api/users/me/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "2184534d-b464-47dd-a78d-1ff45242a60d",
			"name": "get_non_existing_profile // User",
			"url": "http://localhost/api/users/9876/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "d33b254b-0248-4250-acd9-84501120d630",
			"name": "reset_password_wrong_password // User",
			"url": "http://localhost/api/users/set_password/",
			"time": 226,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				226
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e6cb24a9-88fc-4d65-8b23-6062e378bf31",
			"name": "delete_avatar // No Auth",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "3464d1b0-cdc9-4e22-b996-a80cb9959a72",
			"name": "set_avatar // No Auth",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "aba728e4-89ff-45ae-90a2-b1c1d4889353",
			"name": "set_avatar_empty_body // User",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c0db34eb-201d-4727-92c7-0043a4ad49f3",
			"name": "delete_avatar // User",
			"url": "http://localhost/api/users/me/avatar/",
			"time": 9,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "ec2f4a08-73fb-4589-bda4-42cb2db1bdc8",
			"name": "check_avatar_is_deleted // User",
			"url": "http://localhost/api/users/me/",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно быть пустым": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно быть пустым": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно быть пустым": true
				}
			]
		},
		{
			"id": "c7788049-af71-4b80-a790-93494ffd34cc",
			"name": "get_ingredients_list // No Auth",
			"url": "http://localhost/api/ingredients/",
			"time": 34,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "f686d60f-1add-440d-b2e4-06c9277bce7d",
			"name": "get_ingredients_list // User",
			"url": "http://localhost/api/ingredients/",
			"time": 38,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "5287d378-877b-42b6-a0cd-b5d307c85183",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://localhost/api/ingredients/?name=а",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "e23eb510-1eaa-4873-b158-19175eeb0bd8",
			"name": "get_ingredient // No Auth",
			"url": "http://localhost/api/ingredients/2045/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "2499569b-eab1-449b-ad89-e1933b33b4f5",
			"name": "get_ingredient // User",
			"url": "http://localhost/api/ingredients/2045/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "020f88df-4ace-400a-91c5-a2123fe56792",
			"name": "get_non_existing_ingredient // User",
			"url": "http://localhost/api/ingredients/9876/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "0201625c-c08b-4bf3-bec5-4408ee683b28",
			"name": "create_ingredient // User",
			"url": "http://localhost/api/ingredients/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "13c64f1e-17e8-4ebb-939e-a9e73beef511",
			"name": "put_ingredient // User",
			"url": "http://localhost/api/ingredients/2045/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "1acfa1a2-eee7-4886-8632-fa2cdfa65988",
			"name": "patch_ingredient // User",
			"url": "http://localhost/api/ingredients/2045/",
			"time": 9,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "61113268-0c4e-40d5-bc4d-b2dfc8886505",
			"name": "delete_ingredient // User",
			"url": "http://localhost/api/ingredients/2045/",
			"time": 12,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "3b98f48a-b262-4fc6-855d-de59e90f4c0a",
			"name": "create_first_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "3d9274e9-bada-457a-a78e-fd296f32c3cb",
			"name": "create_second_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "d7013f99-2657-45fc-8d24-dadbf8ac29c6",
			"name": "create_third_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "1254db0d-e945-4ddf-a125-92dcfd6caec3",
			"name": "create_fourth_recipe // Second User",
			"url": "http://localhost/api/recipes/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "a16b3416-99b8-45d4-a64e-23963b5f75bd",
			"name": "create_fifth_recipe // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "06a99a44-d351-44c3-a6bb-4df1ca289643",
			"name": "get_recipes_list // No Auth",
			"url": "http://localhost/api/recipes/",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "87e3f1f8-3ad8-4428-bfc1-46093bda5fe6",
			"name": "get_recipes_list // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "667471d3-c8de-4335-81ce-5397badf6143",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://localhost/api/recipes/?limit=2",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
				}
			]
		},
		{
			"id": "c5983627-c6c5-4d0d-9bd6-8ddf9c1b41b5",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://localhost/api/recipes/?author=39",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
				}
			]
		},
		{
			"id": "c2bc7440-0a35-4541-8f8e-7e19ec937452",
			"name": "get_recipe_detail // No Auth",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "6a1f0b4b-3018-4614-bbba-bce620b39854",
			"name": "get_recipe_detail // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "5af611c6-d1b4-4fff-9aa9-69362cf7c33f",
			"name": "get_recipe_short_link // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "559fba5d-38c4-42fe-8e84-b888bc89d2aa",
			"name": "get_recipe_short_link // No Auth",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "1ca9cd06-7fc6-4164-8219-98f73b2c7741",
			"name": "update_recipe // Second User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа соответствует ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа соответствует ожидаемой": false
				}
			]
		},
		{
			"id": "caa0ad66-9c35-4924-b2d3-4b420fdfe31e",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://localhost/api/recipes/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5a43455c-8fb9-421c-9781-15e967b10817",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "007ec89d-79e2-45e1-831d-bc69db51cbf8",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0ddcf4e3-7add-43e4-a2f3-96ee55bd77e6",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "60af512d-788e-4f32-95ab-1ba1f6c75d24",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "189f18be-09d0-49cb-b7de-280058ace386",
			"name": "create_recipe_without_image_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e2661fa5-71f8-4bbd-b4cf-88bfc16cb231",
			"name": "create_recipe_empty_image // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3f767826-e13c-4ae6-9971-ad3e39a50f39",
			"name": "create_recipe_without_name_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "fcaae920-3978-47b0-aa9a-ba6b002251b5",
			"name": "create_recipe_empty_name // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bf7879a7-90ec-40b1-90f2-afe39c64b6ce",
			"name": "create_recipe_too_long_name // User",
			"url": "http://localhost/api/recipes/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2e105415-39f3-495c-a769-30b6f8339a03",
			"name": "create_recipe_without_text_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "343efa55-e161-4f91-b477-3df066fea985",
			"name": "create_recipe_empty_text // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "fef92bb5-22c1-4ab6-a771-1574ddaf3968",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a07df18d-716f-4a55-aceb-347dc0d4bdca",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "de205de3-579d-427f-9da5-bd29c59ae2a5",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://localhost/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "13d26ca8-2aa6-4c97-ba7e-3c917e02dc87",
			"name": "create_recipe // No Auth",
			"url": "http://localhost/api/recipes/",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "f6a09409-402e-4a8b-b5c7-365566b9f1d4",
			"name": "update_recipe_not_author // User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "7ba7a39b-3dd3-4abd-a037-c897730e0013",
			"name": "update_recipe // No Auth",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "fa8624f0-516c-4b54-a8c2-bb5f6044a08f",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "cb6b8be7-dd1c-4d55-a553-ae854a5ea6d4",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2cd31939-2ccc-41db-ad9d-02ae7f826424",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "fb1c34d9-9065-496a-96d5-21cb5f71b567",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 13,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "029d3eed-1a7b-4d41-ae44-531963c17639",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "4683aa99-053d-4252-a1d8-6e1b65996768",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "bc746d17-ac97-47d7-8810-9a26855c1015",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "9ea2a9e8-ec21-4e5a-b8de-e99fe9254e6a",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "d17210ed-0dd7-4568-a060-c2a0b64d479d",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "5bdff2aa-3801-4926-a94a-7980b4cbaafe",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "35c4fa94-7bbc-44bd-9cf8-fe8eef679c38",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "1307d71b-91ce-4f91-952d-4a730e9ed768",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://localhost/api/recipes/9876/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "954a83eb-b1b4-4251-9157-4e4d5ba1a416",
			"name": "create_subscription // User",
			"url": "http://localhost/api/users/41/subscribe/",
			"time": 18,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "0d0e7389-0521-4455-9a40-6531794f12db",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://localhost/api/users/40/subscribe/?recipes_limit=2",
			"time": 17,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "c649171b-b736-4e43-8754-7febede287c1",
			"name": "get_subscription_list // User",
			"url": "http://localhost/api/users/subscriptions/",
			"time": 15,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b9bc2013-eb98-40ad-8b0a-06a6450213ee",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://localhost/api/users/subscriptions/?limit=1",
			"time": 15,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": true
				}
			]
		},
		{
			"id": "15b4218f-6ed7-4f47-93e2-af8eaff7b134",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://localhost/api/users/subscriptions/?recipes_limit=2",
			"time": 15,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "3fdf916a-119f-43df-92fd-9c12dce64195",
			"name": "create_subscription // No Auth",
			"url": "http://localhost/api/users/41/subscribe/",
			"time": 3,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "59f94f6e-9d58-43b2-bd92-7b5197bbc224",
			"name": "create_duplicated_subscription // User",
			"url": "http://localhost/api/users/41/subscribe/",
			"time": 13,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				13
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6e440cb3-3e76-454c-9e07-e7af31e0c2ba",
			"name": "create_self_subscription // User",
			"url": "http://localhost/api/users/39/subscribe/",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "86a0de70-8828-475b-9fc7-23c265af1acd",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://localhost/api/users/9876/subscribe/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "51eb9a9b-506b-4654-bc1a-508bb06c6f1e",
			"name": "add_to_shopping_cart // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "5d4b90f9-3e78-4caa-b276-42c38a8d87d2",
			"name": "download_shopping_cart // User",
			"url": "http://localhost/api/recipes/download_shopping_cart/",
			"time": 14,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true
				}
			]
		},
		{
			"id": "a58199b8-223d-462c-a205-81242c0944a6",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "a61cdfc6-7942-41a1-b44b-5145b45562c2",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "a4273598-45e2-42bd-864a-4533f725c591",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://localhost/api/recipes/9876/shopping_cart/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "ca509236-2df2-480d-948f-4ce78c38f3cf",
			"name": "add_to_favorite // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "de555fd8-7a36-4c19-a3f1-ee6fcffba808",
			"name": "add_to_favorite // No Auth",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "634bdd60-d16e-420a-b232-96bf7b54087f",
			"name": "add_again_to_favorite // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "bda8ea22-eb03-4267-b61d-cdf39bd701bf",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://localhost/api/recipes/9876/favorite/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "e4c593a8-fc6f-4b99-9547-5bbaf5d8c795",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://localhost/api/recipes/?is_in_shopping_cart=1",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
				}
			]
		},
		{
			"id": "af26553a-6c55-41de-a761-37d3a152e6fc",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://localhost/api/recipes/?is_in_shopping_cart=1",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "78f36a00-d42b-457a-a59f-9a661cd963a8",
			"name": "get_recipes_list_with_is_favorited_param // User",
			"url": "http://localhost/api/recipes/?is_favorited=1",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "637d0bc8-e4b8-4270-9e54-c0265eab7e24",
			"name": "get_recipes_list_with_is_favorited_param // No Auth",
			"url": "http://localhost/api/recipes/?is_favorited=1",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "d58fe82f-2364-4ec0-a5db-d861c72f07a4",
			"name": "delete_subscription // No Auth",
			"url": "http://localhost/api/users/41/subscribe/",
			"time": 4,
			"responseCode": {
				"code": 403,
				"name": "Forbidden"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "bcb171c8-a525-4532-8a7a-11b1ad06581e",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://localhost/api/users/41/subscribe/",
			"time": 20,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e79abcde-090d-43a3-b07b-c61c5405f41c",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://localhost/api/users/9876/subscribe/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "94a3d36b-f61d-49f0-a744-38907ac0b684",
			"name": "delete_first_subscription // User",
			"url": "http://localhost/api/users/41/subscribe/",
			"time": 11,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "17af41bb-c26e-4ee1-9245-e83a975b6f4a",
			"name": "delete_second_subscription // User",
			"url": "http://localhost/api/users/40/subscribe/",
			"time": 11,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "5732c9af-ac83-4547-ad17-10682e51e613",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "a99685ba-923e-4a31-a28f-87f5d0ca8672",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "3cb1f8f2-4aea-4d64-8274-d0c31aa5a38c",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://localhost/api/recipes/9876/shopping_cart/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "a24598c8-c5b5-4294-ab07-f774f0221100",
			"name": "remove_from_shopping_cart // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "004755bf-c06a-491a-83cd-44e48557b50b",
			"name": "remove_from_favorite // No Auth",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "cbd4bf96-f342-48b8-88ae-1c64c92a1348",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2b7c2cfd-22ea-45d7-bf5b-daee90f2132a",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://localhost/api/recipes/9876/favorite/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "e5ff00ff-81d4-481e-8d38-183a7006ab0b",
			"name": "remove_from_favorite // User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "f9f694fe-aca7-45be-97fa-555fcddc2392",
			"name": "delete_recipe // No Auth",
			"url": "http://localhost/api/recipes/{{fifthRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "9fab9fc1-8a0d-45cb-b370-fc935490a8e6",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://localhost/api/recipes/{{fifthRecipeId}}/",
			"time": 10,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "50a9df1b-e8e7-4dd9-bc26-a3c29d1ed3de",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://localhost/api/recipes/9876/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "3eb9dffe-163e-4e18-b156-270664210f04",
			"name": "delete_first_recipe // Second User",
			"url": "http://localhost/api/recipes/{{firstRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "075eee33-5adf-4bf9-8fab-3a148cff2b9a",
			"name": "delete_second_recipe // Second User",
			"url": "http://localhost/api/recipes/{{secondRecipeId}}/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "22edb31f-a712-4618-a9b1-1440b27d4035",
			"name": "delete_third_recipe // Second User",
			"url": "http://localhost/api/recipes/{{thirdRecipeId}}/",
			"time": 11,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "1ed102c3-c0e2-4ee4-8ada-ad58fbd06bdd",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://localhost/api/recipes/{{fourthRecipeId}}/",
			"time": 8,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "71ec29bf-3dea-4fc9-9f24-228f1ec80599",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://localhost/api/recipes/{{fifthRecipeId}}/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		}
	],
	"count": 1,
	"totalTime": 4358,
	"collection": {
		"requests": [
			{
				"id": "669757ee-f999-41f5-b328-52aa4317e05a",
				"method": "POST"
			},
			{
				"id": "1664c53c-3066-4a08-91b2-5e12a563831f",
				"method": "POST"
			},
			{
				"id": "b9c660fa-d587-490d-903f-56106edfaa88",
				"method": "POST"
			},
			{
				"id": "7223704c-cace-4c02-b885-a55207ae504a",
				"method": "POST"
			},
			{
				"id": "3f2a6017-8c6b-42e6-a1f9-64e0b9e0c656",
				"method": "POST"
			},
			{
				"id": "d0f80aae-1741-4b82-9be1-c29b1b655d6d",
				"method": "POST"
			},
			{
				"id": "d217bf48-3133-41a1-9f60-338af35391ea",
				"method": "POST"
			},
			{
				"id": "f828e836-dd58-4232-a3bd-31ecb205bcb7",
				"method": "POST"
			},
			{
				"id": "5efb7646-9906-4104-93a0-b5b6e2834c98",
				"method": "POST"
			},
			{
				"id": "c5eb83a6-bf98-4c8e-b7c9-e88c420333a9",
				"method": "POST"
			},
			{
				"id": "53b1e31b-fad1-496b-88cf-f6564e84d8b1",
				"method": "POST"
			},
			{
				"id": "83d443d6-ae42-4200-9c36-6072b29e2356",
				"method": "POST"
			},
			{
				"id": "67cacff5-99e0-4a74-9c80-4c622cf814c9",
				"method": "POST"
			},
			{
				"id": "54ce8985-8288-4c46-b719-ba7004374052",
				"method": "POST"
			},
			{
				"id": "c1e4b09d-9ad4-4c23-b7f5-6db81cad0d3c",
				"method": "POST"
			},
			{
				"id": "04403aef-bbc4-455f-833c-8d4a8db29fb8",
				"method": "POST"
			},
			{
				"id": "bc328a9c-04e1-45f8-9026-f9095e501578",
				"method": "POST"
			},
			{
				"id": "68b5ee5a-445b-4c73-aa42-0b5e7ea0d53c",
				"method": "POST"
			},
			{
				"id": "8cd75ac0-2bbf-4d77-861f-f61ff410b319",
				"method": "POST"
			},
			{
				"id": "e557919f-ac79-471d-8835-a0b3bd604f2f",
				"method": "POST"
			},
			{
				"id": "763fca67-c3a2-4936-9268-bd4d04b88f91",
				"method": "POST"
			},
			{
				"id": "87c51f22-9ef7-4b0e-8980-069efe0eaeee",
				"method": "POST"
			},
			{
				"id": "f3f28667-84c0-4e45-ba9d-674782e38be5",
				"method": "GET"
			},
			{
				"id": "c708c747-feac-410b-9082-3375d3756359",
				"method": "GET"
			},
			{
				"id": "93677307-19c9-44e9-83b3-45547088a519",
				"method": "GET"
			},
			{
				"id": "0f1f8c88-244c-4cd1-a39c-f29b20f40fc8",
				"method": "GET"
			},
			{
				"id": "7a7b1617-3063-4215-ad86-d3f172b03cac",
				"method": "GET"
			},
			{
				"id": "0f9baa29-cfab-4d12-87d1-8b11210ffd74",
				"method": "GET"
			},
			{
				"id": "dd659d23-29d4-4401-9d34-fe5ea96c498f",
				"method": "PUT"
			},
			{
				"id": "d881681f-faf8-4987-b575-6a0aacd62e1f",
				"method": "GET"
			},
			{
				"id": "86d56e2f-c1ee-4ffa-b414-a617690de81a",
				"method": "POST"
			},
			{
				"id": "7e078313-2fed-4e5e-b2c1-9c0552fdbdc6",
				"method": "POST"
			},
			{
				"id": "a7bd46f6-53f9-4c6c-badb-5b3086c8ce20",
				"method": "POST"
			},
			{
				"id": "91f1e1a7-4ab4-4c27-84a3-e9ec5399d7bc",
				"method": "POST"
			},
			{
				"id": "8c3b7681-e4ca-4999-af9f-959669575ef6",
				"method": "GET"
			},
			{
				"id": "2184534d-b464-47dd-a78d-1ff45242a60d",
				"method": "GET"
			},
			{
				"id": "d33b254b-0248-4250-acd9-84501120d630",
				"method": "POST"
			},
			{
				"id": "e6cb24a9-88fc-4d65-8b23-6062e378bf31",
				"method": "DELETE"
			},
			{
				"id": "3464d1b0-cdc9-4e22-b996-a80cb9959a72",
				"method": "PUT"
			},
			{
				"id": "aba728e4-89ff-45ae-90a2-b1c1d4889353",
				"method": "PUT"
			},
			{
				"id": "c0db34eb-201d-4727-92c7-0043a4ad49f3",
				"method": "DELETE"
			},
			{
				"id": "ec2f4a08-73fb-4589-bda4-42cb2db1bdc8",
				"method": "GET"
			},
			{
				"id": "c7788049-af71-4b80-a790-93494ffd34cc",
				"method": "GET"
			},
			{
				"id": "f686d60f-1add-440d-b2e4-06c9277bce7d",
				"method": "GET"
			},
			{
				"id": "5287d378-877b-42b6-a0cd-b5d307c85183",
				"method": "GET"
			},
			{
				"id": "e23eb510-1eaa-4873-b158-19175eeb0bd8",
				"method": "GET"
			},
			{
				"id": "2499569b-eab1-449b-ad89-e1933b33b4f5",
				"method": "GET"
			},
			{
				"id": "020f88df-4ace-400a-91c5-a2123fe56792",
				"method": "GET"
			},
			{
				"id": "0201625c-c08b-4bf3-bec5-4408ee683b28",
				"method": "POST"
			},
			{
				"id": "13c64f1e-17e8-4ebb-939e-a9e73beef511",
				"method": "PUT"
			},
			{
				"id": "1acfa1a2-eee7-4886-8632-fa2cdfa65988",
				"method": "PATCH"
			},
			{
				"id": "61113268-0c4e-40d5-bc4d-b2dfc8886505",
				"method": "DELETE"
			},
			{
				"id": "3b98f48a-b262-4fc6-855d-de59e90f4c0a",
				"method": "POST"
			},
			{
				"id": "3d9274e9-bada-457a-a78e-fd296f32c3cb",
				"method": "POST"
			},
			{
				"id": "d7013f99-2657-45fc-8d24-dadbf8ac29c6",
				"method": "POST"
			},
			{
				"id": "1254db0d-e945-4ddf-a125-92dcfd6caec3",
				"method": "POST"
			},
			{
				"id": "a16b3416-99b8-45d4-a64e-23963b5f75bd",
				"method": "POST"
			},
			{
				"id": "06a99a44-d351-44c3-a6bb-4df1ca289643",
				"method": "GET"
			},
			{
				"id": "87e3f1f8-3ad8-4428-bfc1-46093bda5fe6",
				"method": "GET"
			},
			{
				"id": "667471d3-c8de-4335-81ce-5397badf6143",
				"method": "GET"
			},
			{
				"id": "c5983627-c6c5-4d0d-9bd6-8ddf9c1b41b5",
				"method": "GET"
			},
			{
				"id": "c2bc7440-0a35-4541-8f8e-7e19ec937452",
				"method": "GET"
			},
			{
				"id": "6a1f0b4b-3018-4614-bbba-bce620b39854",
				"method": "GET"
			},
			{
				"id": "5af611c6-d1b4-4fff-9aa9-69362cf7c33f",
				"method": "GET"
			},
			{
				"id": "559fba5d-38c4-42fe-8e84-b888bc89d2aa",
				"method": "GET"
			},
			{
				"id": "1ca9cd06-7fc6-4164-8219-98f73b2c7741",
				"method": "PATCH"
			},
			{
				"id": "caa0ad66-9c35-4924-b2d3-4b420fdfe31e",
				"method": "POST"
			},
			{
				"id": "5a43455c-8fb9-421c-9781-15e967b10817",
				"method": "POST"
			},
			{
				"id": "007ec89d-79e2-45e1-831d-bc69db51cbf8",
				"method": "POST"
			},
			{
				"id": "0ddcf4e3-7add-43e4-a2f3-96ee55bd77e6",
				"method": "POST"
			},
			{
				"id": "60af512d-788e-4f32-95ab-1ba1f6c75d24",
				"method": "POST"
			},
			{
				"id": "189f18be-09d0-49cb-b7de-280058ace386",
				"method": "POST"
			},
			{
				"id": "e2661fa5-71f8-4bbd-b4cf-88bfc16cb231",
				"method": "POST"
			},
			{
				"id": "3f767826-e13c-4ae6-9971-ad3e39a50f39",
				"method": "POST"
			},
			{
				"id": "fcaae920-3978-47b0-aa9a-ba6b002251b5",
				"method": "POST"
			},
			{
				"id": "bf7879a7-90ec-40b1-90f2-afe39c64b6ce",
				"method": "POST"
			},
			{
				"id": "2e105415-39f3-495c-a769-30b6f8339a03",
				"method": "POST"
			},
			{
				"id": "343efa55-e161-4f91-b477-3df066fea985",
				"method": "POST"
			},
			{
				"id": "fef92bb5-22c1-4ab6-a771-1574ddaf3968",
				"method": "POST"
			},
			{
				"id": "a07df18d-716f-4a55-aceb-347dc0d4bdca",
				"method": "POST"
			},
			{
				"id": "de205de3-579d-427f-9da5-bd29c59ae2a5",
				"method": "POST"
			},
			{
				"id": "13d26ca8-2aa6-4c97-ba7e-3c917e02dc87",
				"method": "POST"
			},
			{
				"id": "f6a09409-402e-4a8b-b5c7-365566b9f1d4",
				"method": "PATCH"
			},
			{
				"id": "7ba7a39b-3dd3-4abd-a037-c897730e0013",
				"method": "PATCH"
			},
			{
				"id": "fa8624f0-516c-4b54-a8c2-bb5f6044a08f",
				"method": "PATCH"
			},
			{
				"id": "cb6b8be7-dd1c-4d55-a553-ae854a5ea6d4",
				"method": "PATCH"
			},
			{
				"id": "2cd31939-2ccc-41db-ad9d-02ae7f826424",
				"method": "PATCH"
			},
			{
				"id": "fb1c34d9-9065-496a-96d5-21cb5f71b567",
				"method": "PATCH"
			},
			{
				"id": "029d3eed-1a7b-4d41-ae44-531963c17639",
				"method": "PATCH"
			},
			{
				"id": "4683aa99-053d-4252-a1d8-6e1b65996768",
				"method": "PATCH"
			},
			{
				"id": "bc746d17-ac97-47d7-8810-9a26855c1015",
				"method": "PATCH"
			},
			{
				"id": "9ea2a9e8-ec21-4e5a-b8de-e99fe9254e6a",
				"method": "PATCH"
			},
			{
				"id": "d17210ed-0dd7-4568-a060-c2a0b64d479d",
				"method": "PATCH"
			},
			{
				"id": "5bdff2aa-3801-4926-a94a-7980b4cbaafe",
				"method": "PATCH"
			},
			{
				"id": "35c4fa94-7bbc-44bd-9cf8-fe8eef679c38",
				"method": "PATCH"
			},
			{
				"id": "1307d71b-91ce-4f91-952d-4a730e9ed768",
				"method": "PATCH"
			},
			{
				"id": "954a83eb-b1b4-4251-9157-4e4d5ba1a416",
				"method": "POST"
			},
			{
				"id": "0d0e7389-0521-4455-9a40-6531794f12db",
				"method": "POST"
			},
			{
				"id": "c649171b-b736-4e43-8754-7febede287c1",
				"method": "GET"
			},
			{
				"id": "b9bc2013-eb98-40ad-8b0a-06a6450213ee",
				"method": "GET"
			},
			{
				"id": "15b4218f-6ed7-4f47-93e2-af8eaff7b134",
				"method": "GET"
			},
			{
				"id": "3fdf916a-119f-43df-92fd-9c12dce64195",
				"method": "POST"
			},
			{
				"id": "59f94f6e-9d58-43b2-bd92-7b5197bbc224",
				"method": "POST"
			},
			{
				"id": "6e440cb3-3e76-454c-9e07-e7af31e0c2ba",
				"method": "POST"
			},
			{
				"id": "86a0de70-8828-475b-9fc7-23c265af1acd",
				"method": "POST"
			},
			{
				"id": "51eb9a9b-506b-4654-bc1a-508bb06c6f1e",
				"method": "POST"
			},
			{
				"id": "5d4b90f9-3e78-4caa-b276-42c38a8d87d2",
				"method": "GET"
			},
			{
				"id": "a58199b8-223d-462c-a205-81242c0944a6",
				"method": "POST"
			},
			{
				"id": "a61cdfc6-7942-41a1-b44b-5145b45562c2",
				"method": "POST"
			},
			{
				"id": "a4273598-45e2-42bd-864a-4533f725c591",
				"method": "POST"
			},
			{
				"id": "ca509236-2df2-480d-948f-4ce78c38f3cf",
				"method": "POST"
			},
			{
				"id": "de555fd8-7a36-4c19-a3f1-ee6fcffba808",
				"method": "POST"
			},
			{
				"id": "634bdd60-d16e-420a-b232-96bf7b54087f",
				"method": "POST"
			},
			{
				"id": "bda8ea22-eb03-4267-b61d-cdf39bd701bf",
				"method": "POST"
			},
			{
				"id": "e4c593a8-fc6f-4b99-9547-5bbaf5d8c795",
				"method": "GET"
			},
			{
				"id": "af26553a-6c55-41de-a761-37d3a152e6fc",
				"method": "GET"
			},
			{
				"id": "78f36a00-d42b-457a-a59f-9a661cd963a8",
				"method": "GET"
			},
			{
				"id": "637d0bc8-e4b8-4270-9e54-c0265eab7e24",
				"method": "GET"
			},
			{
				"id": "d58fe82f-2364-4ec0-a5db-d861c72f07a4",
				"method": "DELETE"
			},
			{
				"id": "bcb171c8-a525-4532-8a7a-11b1ad06581e",
				"method": "DELETE"
			},
			{
				"id": "e79abcde-090d-43a3-b07b-c61c5405f41c",
				"method": "DELETE"
			},
			{
				"id": "94a3d36b-f61d-49f0-a744-38907ac0b684",
				"method": "DELETE"
			},
			{
				"id": "17af41bb-c26e-4ee1-9245-e83a975b6f4a",
				"method": "DELETE"
			},
			{
				"id": "5732c9af-ac83-4547-ad17-10682e51e613",
				"method": "DELETE"
			},
			{
				"id": "a99685ba-923e-4a31-a28f-87f5d0ca8672",
				"method": "DELETE"
			},
			{
				"id": "3cb1f8f2-4aea-4d64-8274-d0c31aa5a38c",
				"method": "DELETE"
			},
			{
				"id": "a24598c8-c5b5-4294-ab07-f774f0221100",
				"method": "DELETE"
			},
			{
				"id": "004755bf-c06a-491a-83cd-44e48557b50b",
				"method": "DELETE"
			},
			{
				"id": "cbd4bf96-f342-48b8-88ae-1c64c92a1348",
				"method": "DELETE"
			},
			{
				"id": "2b7c2cfd-22ea-45d7-bf5b-daee90f2132a",
				"method": "DELETE"
			},
			{
				"id": "e5ff00ff-81d4-481e-8d38-183a7006ab0b",
				"method": "DELETE"
			},
			{
				"id": "f9f694fe-aca7-45be-97fa-555fcddc2392",
				"method": "DELETE"
			},
			{
				"id": "9fab9fc1-8a0d-45cb-b370-fc935490a8e6",
				"method": "DELETE"
			},
			{
				"id": "50a9df1b-e8e7-4dd9-bc26-a3c29d1ed3de",
				"method": "DELETE"
			},
			{
				"id": "3eb9dffe-163e-4e18-b156-270664210f04",
				"method": "DELETE"
			},
			{
				"id": "075eee33-5adf-4bf9-8fab-3a148cff2b9a",
				"method": "DELETE"
			},
			{
				"id": "22edb31f-a712-4618-a9b1-1440b27d4035",
				"method": "DELETE"
			},
			{
				"id": "1ed102c3-c0e2-4ee4-8ada-ad58fbd06bdd",
				"method": "DELETE"
			},
			{
				"id": "71ec29bf-3dea-4fc9-9f24-228f1ec80599",
				"method": "DELETE"
			}
		]
	}
}